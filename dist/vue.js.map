{"version":3,"file":"vue.js","sources":["../src/Observer/arr.js","../src/Observer/index.js","../src/initState.js","../src/init.js","../src/index.js"],"sourcesContent":["// arr.js文件是用于实现对data中数组使用方法函数进行劫持\r\n// 该文件用于对数据中的数组进行方法拦截和重写。\r\n// 重写数组\r\n\r\n// (1)获取原来的数组方法\r\nlet oldArrayProtoMethods = Array.prototype\r\n\n// (2)继承\r\nlet ArrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\n// 劫持\r\nlet methods = [\r\n\t\"push\",\r\n\t\"pop\",\r\n\t\"unshift\",\r\n\t\"shift\",\r\n\t\"splice\"\r\n]\r\nmethods.forEach(item => {\r\n\tArrayMethods[item] = function(...args){\r\n\t\tconsole.log('劫持数组')\r\n\t\t// 如果没有劫持的数据，这段代码执行了一个对于数组操作的旧方法并返回其结果\r\n\t\tlet result = oldArrayProtoMethods[item].apply(this,args)\r\n\t\treturn result\r\n\t}\r\n})\r\n\r\nexport default ArrayMethods","import ArrayMethods from \"./arr\"\n\n// observer方法传入的参数是一个对象，这个对象就是需要进行数据劫持的对象。\r\nexport function observer(data){\r\n    // 判断data数据\r\n    if(typeof data != 'object' || data == null){\r\n        return data\r\n    }\r\n\t// observe 方法内部实现了一个 Observer 类，这个类实现了对数组以及对象进行劫持的方法。\r\n    return new Observer(data)\r\n}\r\n// Observer 类会首先判断被劫持的对象是否为数组或者对象，\r\n// 如果是对象就调用 walk 方法，遍历对象的所有属性，对每个属性进行劫持；\r\n// 如果是数组，就调用 observeArray 方法对数组进行劫持。\r\nclass Observer{\r\n    constructor(value){\r\n\t\t// 数组遍历的话，就把数组的小标当成属性进行劫持了\r\n\t\t// 判断是否为数组\r\n\t\t// console.log(value)\r\n\t\tif(Array.isArray(value)){\r\n\t\t\t// 这段代码给一个名为value的对象设置了一个名为__proto__的属性，将其指向了一个名为ArrayMethods的对象。\r\n\t\t\t// 这意味着当在value上调用数组方法时，它会先在value上查找是否有这个方法，\r\n\t\t\t// 如果没有，就会到ArrayMethods上查找并执行相应的方法。\r\n\t\t\t// 这样做可以实现从一个普通的对象继承数组的方法，使其看起来像一个数组对象。\r\n\t\t\tvalue.__proto__ = ArrayMethods\r\n\t\t\t// 如果value是数组对象\r\n\t\t\tthis.observerArray(value)\r\n\t\t} else {\r\n\t\t\tthis.walk(value)  // 遍历\r\n\t\t}\r\n    }\r\n    walk(data){\r\n        // Object.keys() 是 JavaScript 内置的一个方法，\r\n        // 用于返回一个对象的可枚举属性（不包括原型链上的属性）列表。其作用是将一个对象的属性转化成由属性名组成的数组。\r\n        let keys = Object.keys(data)\r\n        for(let i = 0; i < keys.length; i++){\r\n            // 对对象中的每个属性进行劫持\r\n            let key = keys[i]\r\n            let value = data[keys]\r\n            defineReactive(data, key, value)\r\n        }\r\n    }\r\n\tobserverArray(value){\r\n\t\tfor(let i = 0; i < value.length; i++){\r\n\t\t\tobserver(value[i])\r\n\t\t}\r\n\t}\r\n}\r\n// 对对象中的属性进行劫持\r\n// Object.defineProperty 方法会给当前属性添加 getter 和 setter。\r\n// getter 主要用来收集依赖，\r\n// setter 主要用来在属性发生变化时自动触发更新，从而实现响应式的特性。\r\n// Object.defineProperty 有一个缺点只能对对象中的一个属性进行劫持\r\nfunction defineReactive(data, key, value){\r\n    observer(value) // 深度代理，递归\r\n    Object.defineProperty(data, key, {\r\n        get(){\r\n            console.log('获取')\r\n            return value\r\n        },\r\n        set(newValue){\r\n            console.log('设置')\r\n            if(newValue == value) return;\r\n            observer(newValue) // 如果用户设置的值是对象，又进行一次递归\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\n","import { observer } from \"./Observer/index\"\r\n\r\n// initState方法实现对vue实例状态的初始化\r\nexport function initState(vm){\r\n    let opts = vm.$options\r\n    // 判断\r\n    if(opts.data){\r\n\t\t// 调用initData方法初始化data属性\r\n        initData(vm)\r\n    }\r\n}\r\n// vue2对data初始化\r\nfunction initData(vm){\r\n    let data = vm.$options.data\r\n    data = vm._data = typeof data === \"function\" ? data.call(vm) : data  // 改this指向到vm\r\n    // data数据进行劫持\r\n    observer(data)\r\n}\r\n\r\n// data{}中数据    (1)对象    (2)数组     { a:{b:1}, list:[1,2,3], arr:[{}] }\r\n\r\n// 这段代码给Vue实例对象初始化数据，如果实例对象的选项中有data属性，就调用initData方法对数据进行初始化。\r\n// initData方法将data赋值给Vue实例对象中的一个名为_data的属性，并对_data数据进行劫持，实现数据的响应式更新。\r\n// 其中，引入了Observer文件夹下的一个名为observer的方法，用于劫持数据。","import { initState } from \"./initState\"\r\n\r\n// 初始化的文件放这\r\nexport function initMixin(Vue){\r\n    Vue.prototype._init = function(options){\r\n        console.log(options)\r\n        let vm = this\r\n        vm.$options = options  // 给vm实例的options属性赋值options\r\n        // 初始化状态\r\n        initState(vm);\r\n    }\r\n}\r\n\r\n// 这段代码是一个Vue的初始化函数，通过Vue的原型链给Vue实例添加了_init方法。\r\n// 该方法会接收一个options对象参数，并将其赋值给Vue实例的$options属性。\r\n// 同时，该方法还调用了initState函数，用于初始化Vue实例的状态。","import { initMixin } from \"./init\"\r\n\r\n// 入口文件\r\nfunction Vue(options){\r\n    // 初始化\r\n    this._init(options)\r\n}\r\n\r\ninitMixin(Vue)\r\n// 暴露出去\r\nexport default Vue"],"names":[],"mappings":"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"}